#!/usr/bin/env bash
function get-model-conf {
  # Set UI Scale
  #ui_scale=1.7475727796554565 # 1.75
  ui_scale=1.5

  # if res_y is saved then use that
  if test -f $script_dir/res_y; then
    res_y=$(cat $script_dir/res_y)
  fi
  # if var is set
  if [ -z "$res_y" ]; then
    # calc res-y from the current display setting
    res_y=$(gnome-monitor-config list | grep CURRENT | cut -d '@' -f1 | cut -d'x' -f2 | uniq)
    # save to file
    echo -n "$res_y" >$script_dir/res_y
  fi

  # y offset = height of resolution / ui_scale (1800/1.7475... = 1030), but better to check via bustle (recording session bus, you are interested in org.gnome.Mutter.DisplayConfig.ApplyMonitorsConfig call. start recording and configure display in gnome display settings)
  y_offset=$(awk "BEGIN {print $res_y/$ui_scale}")

  case $res_y in
  1200)
    # 1080p model
    prefered_resolution="1920x1200@60.003"
    backlight=card1-eDP-2-backlight
    ;;
  1800)
    # 3k model
    prefered_resolution="2880x1800@120.000"
    backlight=card0-eDP-2-backlight
    ;;
  esac
}

function suenv {
  sudo /usr/bin/env "$@"
}

script_dir=$(dirname "$(readlink -f "$0")")

case "$1" in
set-displays | normal | bottom-up)
  sleep 1
  if lsusb | grep 0b05:1b2c; then
    "$0" top
  else
    "$0" both
  fi
  ;;
top)
  get-model-conf
  gnome-monitor-config set \
    -LpM eDP-1 -m $prefered_resolution -s $ui_scale -x 0 -y 0
  ;;
both)
  get-model-conf
  gnome-monitor-config set \
    -LpM eDP-1 -m $prefered_resolution -s $ui_scale -x 0 -y 0 \
    -LM eDP-2 -m $prefered_resolution -s $ui_scale -x 0 -y $y_offset
  ;;
bottom)
  get-model-conf
  gnome-monitor-config set \
    -LpM eDP-2 -m $prefered_resolution -s $ui_scale -x 0 -y 0
  ;;
left-up)
  get-model-conf
  gnome-monitor-config set \
    -LpM eDP-2 -m $prefered_resolution -s $ui_scale -t left -x 0 -y 0 \
    -LM eDP-1 -m $prefered_resolution -s $ui_scale -t left -x $y_offset -y 0
  ;;
right-up)
  get-model-conf
  gnome-monitor-config set \
    -LM eDP-1 -m $prefered_resolution -s $ui_scale -t right -x 0 -y 0 \
    -LpM eDP-2 -m $prefered_resolution -s $ui_scale -t right -x $y_offset -y 0
  ;;
status)
  get-model-conf
  case "$(gnome-monitor-config list | grep OFF)" in
  "Monitor [ eDP-2 ] OFF") echo top ;;
  "Monitor [ eDP-1 ] OFF") echo bottom ;;
  "") echo both ;;
  esac
  ;;
toggle)
  get-model-conf
  if gnome-monitor-config list | grep OFF >/dev/null; then
    "$0" both
  else
    "$0" top
  fi
  ;;
set-tablet-mapping)
  for type in tablets touchscreens; do
    dconf write "/org/gnome/desktop/peripherals/${type}/04f3:425b/output" \
      "['SDC', '0x419d', '0x00000000', 'eDP-1']"
    dconf write "/org/gnome/desktop/peripherals/${type}/04f3:425a/output" \
      "['SDC', '0x419d', '0x00000000', 'eDP-2']"
  done
  ;;
keyboard-setup)
  gsettings set org.gnome.settings-daemon.plugins.media-keys rfkill-static "['XF86UWB', 'XF86RFKill']"
  gsettings set org.gnome.settings-daemon.plugins.media-keys custom-keybindings "['/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/']"
  gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ name 'Duo Set Displays'
  gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ command 'duo set-displays'
  gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ binding 'WLAN'
  ;;
apply-set-bat-limit)
  if test -f $script_dir/bat-limit; then
    "$0" bat-limit $(cat $script_dir/bat-limit)
  fi
  ;;
bat-limit)
  echo "${2:-80}" | suenv tee /sys/class/power_supply/BAT0/charge_control_end_threshold
  echo "${2:-80}" >$script_dir/bat-limit
  ;;
sync-backlight)
  get-model-conf
  cat "/sys/class/backlight/intel_backlight/brightness" |
    suenv tee /sys/class/backlight/$backlight/brightness
  ;;
watch-backlight)
  "$0" sync-backlight
  while inotifywait -e modify /sys/class/backlight/intel_backlight/brightness; do
    "$0" sync-backlight
  done
  ;;
watch-rotation)
  monitor-sensor --accel |
    stdbuf -oL grep orientation |
    stdbuf -oL cut -d: -f2 |
    stdbuf -oL sed 's/[ )]//g' |
    xargs -I '{}' duo '{}'
  ;;
*) echo "Usage: duo <top|bottom|both|set-displays|toggle|status|set-tablet-mapping|bat-limit|sync-backlight|watch-backlight|watch-rotation>" ;;
esac
